@startuml

skinparam groupInheritance 2

title "STAM: Stand-off Text Annotation Model"

class TextResource {
    --
    id : str
    text: str
    --
    _id : int
}

class AnnotationStore {
    id: str?
    annotations: [Annotation*]
    sets: [AnnotationDataSet*]
    resources: [TextResource*]
    --
    <i>Holds the full annotation graph model</i>
    <i>(entry-point)</i>
}

class AnnotationDataSet {
    id: str?
    keys: [DataKey*]
    data: [AnnotationData*]
    --
    _id: int
    --
    <i>An annotation dataset holds</i>
    <i>the actual data associated with annotations</i>
    <i>and defines the vocabulary (the keys), it does</i>
    <i>not hold the annotations themselves</i>
}

class Annotation {
    id: str?
    data: [&AnnotationData+]
    target: Selector
    --
    _id : int
    _referenced_by: [&Annotation*]
    --
    <i>An instance of an annotation</i>
    <i>Core concept, i.e. nodes in the graph,
    <i>binds everything together</i>
}

abstract class Selector {
    --
    <i>Selects the target</i>
    <i>(or source) of annotation</i>
}

class TextSelector {
    resource: &TextResource,
    offsets: (begin: Cursor, end: Cursor)
    ---
    <i>Selects a single part of the text,</i>
    <i>Offsets are unicode codepoints relative</i>
    <i>to the text, zero-indexed, </i>
    <i>end is non-inclusive,</i>

}

class ResourceSelector {
    resource: &TextResource
    ---
    <i>Selects a resource as a whole</i>
    <i>(i.e. annotation is metadata)</i>
}

class DataSetSelector {
    annotationset: &AnnotationDataSet
    --
    <i>Selects an annotation data set as</i>
    <i>a whole (i.e. annotation is metadata)</i>
}

class AnnotationSelector {
    annotation: &Annotation
    offsets: (begin: Cursor, end: Cursor)?
    --
    <i>Selects an annotation. May optionally</i>
    <i>select a only part of the annotation's target</i>
    <i>Offsets are relative</i>
    <i>to the targeted annotation, </i>
    <i>end is non-inclusive.</i>
}


class MultiSelector {
    selectors: [Selector+]
    --
    <i>Combines selectors</i>
}

class DirectedSelector {
    selectors: [Selector+]
    --
    <i>Expresses a direction between two or more selectors,</i>
    <i>in the exact order specified (from -> to)</i>
}

Selector <|-[#green]- TextSelector
Selector <|-[#green]- ResourceSelector
Selector <|-[#green]- DataSetSelector
Selector <|-[#green]- AnnotationSelector
Selector <|-[#green]- MultiSelector
Selector <|-[#green]- DirectedSelector





class AnnotationData {
    id: str?
    key: &DataKey
    value: DataValue
    --
    _id : int
    _referenced_by: [&Annotation*]
    _part_of_set: &AnnotationDataSet
    --
    <i>The value of the annotation</i>
}

class DataKey {
    id: str
    indexed: bool
    --
    _id: int
    _referenced_by: [&AnnotationData*]
    _part_of_set: &AnnotationDataSet
    --
    <i>The key of an annotation</i>
}

enum DataValue {
    Null
    Id(value: str)
    String(value: str)
    Bool(value: bool)
    Int(value: int)
    Float(value: float)
    Datetime(value: datetime)
    Set(value: [DataValue])
    List(value: [DataValue])
    --
    <i>Encapsulates a data value</i>
    <i>along with its type</i>
}
' There is no Map() in DataValue, a Map should be expressed as an Annotation on an Annotation

enum Cursor {
    BeginAligned(v: int)
    EndAligned(v: int)
    --
    <i>Used to select offsets</i>
    <i>Units are unicode codepoints,</i>
    <i>(not bytes!), zero-indexed</i>
}

AnnotationStore "1" *--> "*" AnnotationDataSet : > annotationsets
AnnotationStore "1" *--> "*" TextResource : > resources
AnnotationStore "1" *--> "*" Annotation : > annotations

AnnotationDataSet "1" *--> "*" AnnotationData : > data
AnnotationDataSet "1" *--> "*" DataKey : > keys

Annotation "1" *--> "+" Selector : > target
Annotation "1" o-[#red]-> "*" AnnotationData : > data
Annotation "1" .[#red].> "*" Annotation : > _referenced_by

AnnotationData "1" .[#red].> "+" Annotation : > _referenced_by
AnnotationData "1" *--> "1" DataValue : > value
AnnotationData "1" *-[#red]-> "1" DataKey : > key
AnnotationData "1" .[#red].> "1" AnnotationDataSet : > _part_of_set

TextSelector "1" -[#red]-> "1" TextResource : > resource
ResourceSelector "1" -[#red]-> "1" TextResource : > resource
AnnotationSelector "1" -[#red]-> "1" Annotation : > annotation

DataKey "1" .[#red].> "+" AnnotationData : > _referenced_by
DataKey "1" .[#red].> "1" AnnotationDataSet : > _part_of_set

MultiSelector "1" --> "*" Selector : > selectors
DirectedSelector "1" --> "*" Selector : > selectors
TextSelector "1" --> "2" Cursor : > offsets
AnnotationSelector "1" --> "2" Cursor : > offsets
DataSetSelector "1" --> "*" Selector : > annotationset

@enduml
